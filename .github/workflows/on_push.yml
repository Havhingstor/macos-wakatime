name: Tests

# TODO: uncomment this when ready to release
# on:
#   push:
#     tags:
#       - '**'
on: [push]

env:
  ACTIONS_RUNNER_DEBUG: true

jobs:
  build-darwin:
    name: Build Darwin
    runs-on: macos-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Install xcodegen via Homebrew for building xcode project
        run: brew install xcodegen
      -
        name: Generate an Xcode project from a spec
        run: xcodegen
      -
        name: Build Xcode project
        run: xcodebuild
      -
        name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: app
          path: build/Debug/WakaTime.app

  sign:
    name: Sign Apple binaries
    needs: [build-darwin]
    runs-on: macos-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: app
          path: WakaTime.app/
      # - 
      #   name: Move app to WakaTime.app
      #   shell: bash
      #   run: |
      #     mkdir -p ./build/WakaTime.app
      #     mv build/* ./build/WakaTime.app
      -
        name: Import Code-Signing Certificates
        uses: Apple-Actions/import-codesign-certs@v1
        with:
          # The certificates in a PKCS12 file encoded as a base64 string
          p12-file-base64: ${{ secrets.APPLE_DEVELOPER_CERTIFICATE_P12_BASE64 }}
          # The password used to import the PKCS12 file.
          p12-password: ${{ secrets.APPLE_DEVELOPER_CERTIFICATE_PASSWORD }}
      -
        name: Install gon via Homebrew for code signing and app notarization
        run: |
          brew tap mitchellh/gon
          brew install mitchellh/gon/gon
      -
        name: Sign and notarize mac binary with gon
        env:
          AC_USERNAME: ${{ secrets.AC_USERNAME }}
          AC_PASSWORD: ${{ secrets.AC_PASSWORD }}
        run: gon -log-level=debug -log-json ./gon.hcl
      -
        name: Move zip file
        run: |
          mkdir ./build
          mv ./WakaTime.zip ./build/
      -
        name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: app
          path: build/

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [build-darwin, sign]
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      -
        name: Get related pull request
        uses: 8BitJonny/gh-get-current-pr@1.4.0
        id: changelog-release
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
      # -
      #   name: Prepare changelog
      #   id: changelog
      #   run: |
      #     changelog="${{ steps.changelog-release.outputs.pr_body }}"
      #     ./bin/prepare_changelog.sh $(echo ${GITHUB_REF#refs/heads/}) "$changelog"
      -
        name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: app
          path: build/
      -
        name: Prepare release assets
        run: ./bin/prepare_assets.sh
      -
        name: "Create release"
        uses: softprops/action-gh-release@master
        with:
          # name: ${GITHUB_REF##*/}
          # tag_name: ${GITHUB_REF##*/}
          name: v0.1.0-test.1
          tag_name: v0.1.0-test.1
          # body: "## Changelog\n${{ steps.changelog.outputs.changelog }}"
          prerelease: true
          target_commitish: ${{ github.sha }}
          draft: true
          files: ./release/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
